"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_lib_fallbackData_js";
exports.ids = ["_rsc_lib_fallbackData_js"];
exports.modules = {

/***/ "(rsc)/./lib/fallbackData.js":
/*!*****************************!*\
  !*** ./lib/fallbackData.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFallbackProjects: () => (/* binding */ getFallbackProjects),\n/* harmony export */   reorderFallbackProjects: () => (/* binding */ reorderFallbackProjects),\n/* harmony export */   updateFallbackProject: () => (/* binding */ updateFallbackProject)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n// Fallback data structure for when MongoDB is not available\n// This simulates the same admin editing behavior with persistent storage\n\n\nconst FALLBACK_DATA_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'data', 'fallback-projects.json');\nconst DEFAULT_FALLBACK_PROJECTS = [\n    {\n        _id: 'fallback-1',\n        slug: 'sepow',\n        title: 'Socio-Economic Participation of Women-led Households (SEPOW)',\n        summary: 'Understanding how women-led households navigate displacement, livelihoods, and aspirations in Somalia.',\n        heroImage: 'https://res.cloudinary.com/dxcjrsrna/image/upload/raagsan/sepow/hero',\n        status: 'published',\n        visible: true,\n        order: 0,\n        startDate: new Date('2023-01-01'),\n        endDate: new Date('2024-12-31'),\n        createdAt: new Date('2024-01-01'),\n        updatedAt: new Date()\n    }\n];\n// Ensure data directory exists\nfunction ensureDataDirectory() {\n    const dataDir = path__WEBPACK_IMPORTED_MODULE_1___default().dirname(FALLBACK_DATA_FILE);\n    if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(dataDir)) {\n        fs__WEBPACK_IMPORTED_MODULE_0___default().mkdirSync(dataDir, {\n            recursive: true\n        });\n    }\n}\n// Load fallback projects from file or use defaults\nfunction loadFallbackProjects() {\n    try {\n        ensureDataDirectory();\n        if (fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(FALLBACK_DATA_FILE)) {\n            const data = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(FALLBACK_DATA_FILE, 'utf8');\n            const projects = JSON.parse(data);\n            return projects.map((project)=>({\n                    ...project,\n                    startDate: project.startDate ? new Date(project.startDate) : null,\n                    endDate: project.endDate ? new Date(project.endDate) : null,\n                    createdAt: new Date(project.createdAt),\n                    updatedAt: new Date(project.updatedAt)\n                }));\n        }\n    } catch (error) {\n        console.error('Error loading fallback projects:', error);\n    }\n    return DEFAULT_FALLBACK_PROJECTS;\n}\n// Save fallback projects to file\nfunction saveFallbackProjectsToFile(projects) {\n    try {\n        ensureDataDirectory();\n        const dataToSave = projects.map((project)=>({\n                ...project,\n                startDate: project.startDate ? project.startDate.toISOString() : null,\n                endDate: project.endDate ? project.endDate.toISOString() : null,\n                createdAt: project.createdAt.toISOString(),\n                updatedAt: project.updatedAt.toISOString()\n            }));\n        fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(FALLBACK_DATA_FILE, JSON.stringify(dataToSave, null, 2));\n        console.log('Fallback projects saved to file');\n    } catch (error) {\n        console.error('Error saving fallback projects:', error);\n    }\n}\n// Load initial fallback projects\nlet fallbackProjects = loadFallbackProjects();\nfunction getFallbackProjects() {\n    // Reload from file to ensure we have the latest data\n    fallbackProjects = loadFallbackProjects();\n    return fallbackProjects.map((project)=>({\n            ...project,\n            startDate: project.startDate ? new Date(project.startDate) : null,\n            endDate: project.endDate ? new Date(project.endDate) : null,\n            createdAt: new Date(project.createdAt),\n            updatedAt: new Date(project.updatedAt)\n        }));\n}\nfunction updateFallbackProject(projectId, updates) {\n    // Find and update the project in the in-memory storage\n    const projectIndex = fallbackProjects.findIndex((p)=>p._id === projectId);\n    if (projectIndex !== -1) {\n        // Apply updates to the project\n        fallbackProjects[projectIndex] = {\n            ...fallbackProjects[projectIndex],\n            ...updates,\n            updatedAt: new Date()\n        };\n        // Save to file for persistence\n        saveFallbackProjectsToFile(fallbackProjects);\n        // Return the updated project with proper date objects\n        const updatedProject = {\n            ...fallbackProjects[projectIndex],\n            startDate: fallbackProjects[projectIndex].startDate ? new Date(fallbackProjects[projectIndex].startDate) : null,\n            endDate: fallbackProjects[projectIndex].endDate ? new Date(fallbackProjects[projectIndex].endDate) : null,\n            createdAt: new Date(fallbackProjects[projectIndex].createdAt),\n            updatedAt: new Date(fallbackProjects[projectIndex].updatedAt)\n        };\n        return updatedProject;\n    }\n    return null;\n}\nfunction reorderFallbackProjects(newOrder) {\n    // Update the order of projects in the in-memory storage\n    fallbackProjects = newOrder.map((project, index)=>({\n            ...project,\n            order: index,\n            updatedAt: new Date()\n        }));\n    // Save to file for persistence\n    saveFallbackProjectsToFile(fallbackProjects);\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WyJDOlxcVXNlcnNcXE9NQVJcXE9uZURyaXZlXFxPTkFaXFxSYWFnc2FuX1BsYXRmb3JtXFxsaWJcXGZhbGxiYWNrRGF0YS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGYWxsYmFjayBkYXRhIHN0cnVjdHVyZSBmb3Igd2hlbiBNb25nb0RCIGlzIG5vdCBhdmFpbGFibGVcclxuLy8gVGhpcyBzaW11bGF0ZXMgdGhlIHNhbWUgYWRtaW4gZWRpdGluZyBiZWhhdmlvciB3aXRoIHBlcnNpc3RlbnQgc3RvcmFnZVxyXG5cclxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcblxyXG5jb25zdCBGQUxMQkFDS19EQVRBX0ZJTEUgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2RhdGEnLCAnZmFsbGJhY2stcHJvamVjdHMuanNvbicpO1xyXG5cclxuY29uc3QgREVGQVVMVF9GQUxMQkFDS19QUk9KRUNUUyA9IFtcclxuICB7XHJcbiAgICBfaWQ6ICdmYWxsYmFjay0xJyxcclxuICAgIHNsdWc6ICdzZXBvdycsXHJcbiAgICB0aXRsZTogJ1NvY2lvLUVjb25vbWljIFBhcnRpY2lwYXRpb24gb2YgV29tZW4tbGVkIEhvdXNlaG9sZHMgKFNFUE9XKScsXHJcbiAgICBzdW1tYXJ5OiAnVW5kZXJzdGFuZGluZyBob3cgd29tZW4tbGVkIGhvdXNlaG9sZHMgbmF2aWdhdGUgZGlzcGxhY2VtZW50LCBsaXZlbGlob29kcywgYW5kIGFzcGlyYXRpb25zIGluIFNvbWFsaWEuJyxcclxuICAgIGhlcm9JbWFnZTogJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2R4Y2pyc3JuYS9pbWFnZS91cGxvYWQvcmFhZ3Nhbi9zZXBvdy9oZXJvJyxcclxuICAgIHN0YXR1czogJ3B1Ymxpc2hlZCcsXHJcbiAgICB2aXNpYmxlOiB0cnVlLFxyXG4gICAgb3JkZXI6IDAsXHJcbiAgICBzdGFydERhdGU6IG5ldyBEYXRlKCcyMDIzLTAxLTAxJyksXHJcbiAgICBlbmREYXRlOiBuZXcgRGF0ZSgnMjAyNC0xMi0zMScpLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNC0wMS0wMScpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpXHJcbiAgfVxyXG5dO1xyXG5cclxuLy8gRW5zdXJlIGRhdGEgZGlyZWN0b3J5IGV4aXN0c1xyXG5mdW5jdGlvbiBlbnN1cmVEYXRhRGlyZWN0b3J5KCkge1xyXG4gIGNvbnN0IGRhdGFEaXIgPSBwYXRoLmRpcm5hbWUoRkFMTEJBQ0tfREFUQV9GSUxFKTtcclxuICBpZiAoIWZzLmV4aXN0c1N5bmMoZGF0YURpcikpIHtcclxuICAgIGZzLm1rZGlyU3luYyhkYXRhRGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIExvYWQgZmFsbGJhY2sgcHJvamVjdHMgZnJvbSBmaWxlIG9yIHVzZSBkZWZhdWx0c1xyXG5mdW5jdGlvbiBsb2FkRmFsbGJhY2tQcm9qZWN0cygpIHtcclxuICB0cnkge1xyXG4gICAgZW5zdXJlRGF0YURpcmVjdG9yeSgpO1xyXG4gICAgaWYgKGZzLmV4aXN0c1N5bmMoRkFMTEJBQ0tfREFUQV9GSUxFKSkge1xyXG4gICAgICBjb25zdCBkYXRhID0gZnMucmVhZEZpbGVTeW5jKEZBTExCQUNLX0RBVEFfRklMRSwgJ3V0ZjgnKTtcclxuICAgICAgY29uc3QgcHJvamVjdHMgPSBKU09OLnBhcnNlKGRhdGEpO1xyXG4gICAgICByZXR1cm4gcHJvamVjdHMubWFwKHByb2plY3QgPT4gKHtcclxuICAgICAgICAuLi5wcm9qZWN0LFxyXG4gICAgICAgIHN0YXJ0RGF0ZTogcHJvamVjdC5zdGFydERhdGUgPyBuZXcgRGF0ZShwcm9qZWN0LnN0YXJ0RGF0ZSkgOiBudWxsLFxyXG4gICAgICAgIGVuZERhdGU6IHByb2plY3QuZW5kRGF0ZSA/IG5ldyBEYXRlKHByb2plY3QuZW5kRGF0ZSkgOiBudWxsLFxyXG4gICAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUocHJvamVjdC5jcmVhdGVkQXQpLFxyXG4gICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUocHJvamVjdC51cGRhdGVkQXQpXHJcbiAgICAgIH0pKTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBmYWxsYmFjayBwcm9qZWN0czonLCBlcnJvcik7XHJcbiAgfVxyXG4gIHJldHVybiBERUZBVUxUX0ZBTExCQUNLX1BST0pFQ1RTO1xyXG59XHJcblxyXG4vLyBTYXZlIGZhbGxiYWNrIHByb2plY3RzIHRvIGZpbGVcclxuZnVuY3Rpb24gc2F2ZUZhbGxiYWNrUHJvamVjdHNUb0ZpbGUocHJvamVjdHMpIHtcclxuICB0cnkge1xyXG4gICAgZW5zdXJlRGF0YURpcmVjdG9yeSgpO1xyXG4gICAgY29uc3QgZGF0YVRvU2F2ZSA9IHByb2plY3RzLm1hcChwcm9qZWN0ID0+ICh7XHJcbiAgICAgIC4uLnByb2plY3QsXHJcbiAgICAgIHN0YXJ0RGF0ZTogcHJvamVjdC5zdGFydERhdGUgPyBwcm9qZWN0LnN0YXJ0RGF0ZS50b0lTT1N0cmluZygpIDogbnVsbCxcclxuICAgICAgZW5kRGF0ZTogcHJvamVjdC5lbmREYXRlID8gcHJvamVjdC5lbmREYXRlLnRvSVNPU3RyaW5nKCkgOiBudWxsLFxyXG4gICAgICBjcmVhdGVkQXQ6IHByb2plY3QuY3JlYXRlZEF0LnRvSVNPU3RyaW5nKCksXHJcbiAgICAgIHVwZGF0ZWRBdDogcHJvamVjdC51cGRhdGVkQXQudG9JU09TdHJpbmcoKVxyXG4gICAgfSkpO1xyXG4gICAgZnMud3JpdGVGaWxlU3luYyhGQUxMQkFDS19EQVRBX0ZJTEUsIEpTT04uc3RyaW5naWZ5KGRhdGFUb1NhdmUsIG51bGwsIDIpKTtcclxuICAgIGNvbnNvbGUubG9nKCdGYWxsYmFjayBwcm9qZWN0cyBzYXZlZCB0byBmaWxlJyk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNhdmluZyBmYWxsYmFjayBwcm9qZWN0czonLCBlcnJvcik7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBMb2FkIGluaXRpYWwgZmFsbGJhY2sgcHJvamVjdHNcclxubGV0IGZhbGxiYWNrUHJvamVjdHMgPSBsb2FkRmFsbGJhY2tQcm9qZWN0cygpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEZhbGxiYWNrUHJvamVjdHMoKSB7XHJcbiAgLy8gUmVsb2FkIGZyb20gZmlsZSB0byBlbnN1cmUgd2UgaGF2ZSB0aGUgbGF0ZXN0IGRhdGFcclxuICBmYWxsYmFja1Byb2plY3RzID0gbG9hZEZhbGxiYWNrUHJvamVjdHMoKTtcclxuICByZXR1cm4gZmFsbGJhY2tQcm9qZWN0cy5tYXAocHJvamVjdCA9PiAoe1xyXG4gICAgLi4ucHJvamVjdCxcclxuICAgIHN0YXJ0RGF0ZTogcHJvamVjdC5zdGFydERhdGUgPyBuZXcgRGF0ZShwcm9qZWN0LnN0YXJ0RGF0ZSkgOiBudWxsLFxyXG4gICAgZW5kRGF0ZTogcHJvamVjdC5lbmREYXRlID8gbmV3IERhdGUocHJvamVjdC5lbmREYXRlKSA6IG51bGwsXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKHByb2plY3QuY3JlYXRlZEF0KSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUocHJvamVjdC51cGRhdGVkQXQpXHJcbiAgfSkpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlRmFsbGJhY2tQcm9qZWN0KHByb2plY3RJZCwgdXBkYXRlcykge1xyXG4gIC8vIEZpbmQgYW5kIHVwZGF0ZSB0aGUgcHJvamVjdCBpbiB0aGUgaW4tbWVtb3J5IHN0b3JhZ2VcclxuICBjb25zdCBwcm9qZWN0SW5kZXggPSBmYWxsYmFja1Byb2plY3RzLmZpbmRJbmRleChwID0+IHAuX2lkID09PSBwcm9qZWN0SWQpO1xyXG4gIGlmIChwcm9qZWN0SW5kZXggIT09IC0xKSB7XHJcbiAgICAvLyBBcHBseSB1cGRhdGVzIHRvIHRoZSBwcm9qZWN0XHJcbiAgICBmYWxsYmFja1Byb2plY3RzW3Byb2plY3RJbmRleF0gPSB7XHJcbiAgICAgIC4uLmZhbGxiYWNrUHJvamVjdHNbcHJvamVjdEluZGV4XSxcclxuICAgICAgLi4udXBkYXRlcyxcclxuICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpXHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAvLyBTYXZlIHRvIGZpbGUgZm9yIHBlcnNpc3RlbmNlXHJcbiAgICBzYXZlRmFsbGJhY2tQcm9qZWN0c1RvRmlsZShmYWxsYmFja1Byb2plY3RzKTtcclxuICAgIFxyXG4gICAgLy8gUmV0dXJuIHRoZSB1cGRhdGVkIHByb2plY3Qgd2l0aCBwcm9wZXIgZGF0ZSBvYmplY3RzXHJcbiAgICBjb25zdCB1cGRhdGVkUHJvamVjdCA9IHtcclxuICAgICAgLi4uZmFsbGJhY2tQcm9qZWN0c1twcm9qZWN0SW5kZXhdLFxyXG4gICAgICBzdGFydERhdGU6IGZhbGxiYWNrUHJvamVjdHNbcHJvamVjdEluZGV4XS5zdGFydERhdGUgPyBuZXcgRGF0ZShmYWxsYmFja1Byb2plY3RzW3Byb2plY3RJbmRleF0uc3RhcnREYXRlKSA6IG51bGwsXHJcbiAgICAgIGVuZERhdGU6IGZhbGxiYWNrUHJvamVjdHNbcHJvamVjdEluZGV4XS5lbmREYXRlID8gbmV3IERhdGUoZmFsbGJhY2tQcm9qZWN0c1twcm9qZWN0SW5kZXhdLmVuZERhdGUpIDogbnVsbCxcclxuICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZShmYWxsYmFja1Byb2plY3RzW3Byb2plY3RJbmRleF0uY3JlYXRlZEF0KSxcclxuICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZShmYWxsYmFja1Byb2plY3RzW3Byb2plY3RJbmRleF0udXBkYXRlZEF0KVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgcmV0dXJuIHVwZGF0ZWRQcm9qZWN0O1xyXG4gIH1cclxuICByZXR1cm4gbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlb3JkZXJGYWxsYmFja1Byb2plY3RzKG5ld09yZGVyKSB7XHJcbiAgLy8gVXBkYXRlIHRoZSBvcmRlciBvZiBwcm9qZWN0cyBpbiB0aGUgaW4tbWVtb3J5IHN0b3JhZ2VcclxuICBmYWxsYmFja1Byb2plY3RzID0gbmV3T3JkZXIubWFwKChwcm9qZWN0LCBpbmRleCkgPT4gKHtcclxuICAgIC4uLnByb2plY3QsXHJcbiAgICBvcmRlcjogaW5kZXgsXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKClcclxuICB9KSk7XHJcbiAgXHJcbiAgLy8gU2F2ZSB0byBmaWxlIGZvciBwZXJzaXN0ZW5jZVxyXG4gIHNhdmVGYWxsYmFja1Byb2plY3RzVG9GaWxlKGZhbGxiYWNrUHJvamVjdHMpO1xyXG4gIFxyXG4gIHJldHVybiB0cnVlO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJmcyIsInBhdGgiLCJGQUxMQkFDS19EQVRBX0ZJTEUiLCJqb2luIiwicHJvY2VzcyIsImN3ZCIsIkRFRkFVTFRfRkFMTEJBQ0tfUFJPSkVDVFMiLCJfaWQiLCJzbHVnIiwidGl0bGUiLCJzdW1tYXJ5IiwiaGVyb0ltYWdlIiwic3RhdHVzIiwidmlzaWJsZSIsIm9yZGVyIiwic3RhcnREYXRlIiwiRGF0ZSIsImVuZERhdGUiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJlbnN1cmVEYXRhRGlyZWN0b3J5IiwiZGF0YURpciIsImRpcm5hbWUiLCJleGlzdHNTeW5jIiwibWtkaXJTeW5jIiwicmVjdXJzaXZlIiwibG9hZEZhbGxiYWNrUHJvamVjdHMiLCJkYXRhIiwicmVhZEZpbGVTeW5jIiwicHJvamVjdHMiLCJKU09OIiwicGFyc2UiLCJtYXAiLCJwcm9qZWN0IiwiZXJyb3IiLCJjb25zb2xlIiwic2F2ZUZhbGxiYWNrUHJvamVjdHNUb0ZpbGUiLCJkYXRhVG9TYXZlIiwidG9JU09TdHJpbmciLCJ3cml0ZUZpbGVTeW5jIiwic3RyaW5naWZ5IiwibG9nIiwiZmFsbGJhY2tQcm9qZWN0cyIsImdldEZhbGxiYWNrUHJvamVjdHMiLCJ1cGRhdGVGYWxsYmFja1Byb2plY3QiLCJwcm9qZWN0SWQiLCJ1cGRhdGVzIiwicHJvamVjdEluZGV4IiwiZmluZEluZGV4IiwicCIsInVwZGF0ZWRQcm9qZWN0IiwicmVvcmRlckZhbGxiYWNrUHJvamVjdHMiLCJuZXdPcmRlciIsImluZGV4Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/fallbackData.js\n");

/***/ })

};
;